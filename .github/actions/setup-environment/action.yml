name: Setup Environment
description: Setup development environment for Folo project

runs:
  using: composite
  steps:
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo apt update
        sudo apt install -y git git-lfs build-essential cmake gcc make curl libssl-dev pkg-config
        # Set up Git LFS
        git lfs install
    
    - name: Install PowerShell 7 (Linux)
      if: runner.os == 'Linux'
      shell: bash
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        # Download and install PowerShell 7
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
        sudo dpkg -i --force-confnew packages-microsoft-prod.deb
        sudo apt update
        sudo apt install -y powershell
        # Verify PowerShell installation
        pwsh -c "Write-Host 'PowerShell installed successfully'"
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install nightly Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri, rustfmt
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # We use the same shared key for all the different workflows that use this action.
        # This enables more reuse, e.g. the Copilot workflow can reuse artifacts from the
        # validate-linux workflow, which speeds up copilot executions.
        shared-key: prerequisites
    
    - name: Install just
      shell: bash
      run: cargo install just --locked
    
    - name: Configure Git
      shell: bash
      run: git config --local include.path ./.gitconfig
    
    - name: Install development tools
      shell: bash
      run: just install-tools
    
    - name: Verify environment setup
      shell: bash
      run: |
        echo "Verifying installed tools..."
        just --version
        cargo --version
        rustc --version
        echo "Environment setup complete"