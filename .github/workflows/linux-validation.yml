name: Linux Validation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  linux-validation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git git-lfs build-essential cmake gcc make curl
        # Set up Git LFS
        git lfs install
    
    - name: Install PowerShell 7
      run: |
        # Download and install PowerShell 7
        wget -q "https://packages.microsoft.com/config/ubuntu/$(lsb_release -rs)/packages-microsoft-prod.deb"
        sudo dpkg -i packages-microsoft-prod.deb
        sudo apt update
        sudo apt install -y powershell
        # Verify PowerShell installation
        pwsh -c "Write-Host 'PowerShell installed successfully'"
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Install nightly Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: miri, rustfmt
    
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v2
      with:
        # Cache even on build failures to speed up subsequent runs
        cache-on-failure: true
        shared-key: "folo-linux"
    
    - name: Cache cargo tools
      uses: actions/cache@v4
      with:
        # Cache installed cargo tools to avoid reinstalling them on every run
        path: ~/.cargo/bin
        key: cargo-tools-linux-${{ hashFiles('just_setup.just') }}
        restore-keys: |
          cargo-tools-linux-
    
    - name: Install just
      run: cargo install just --locked
    
    - name: Install development tools
      run: just install-tools
    
    - name: Verify environment setup
      run: |
        echo "Verifying installed tools..."
        which just
        which cargo
        which rustc
        cargo --version
        rustc --version
        pwsh --version
        # Check if critical cargo tools are available
        cargo nextest --version || echo "cargo-nextest not available"
        cargo machete --version || echo "cargo-machete not available"
        cargo sort-derives --version || echo "cargo-sort-derives not available"
    
    - name: Run validation
      run: just validate-local