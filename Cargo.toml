[workspace]
members = ["crates/*"]
resolver = "3"

[workspace.package]
authors = ["Sander Saares <sander@saares.eu>"]
edition = "2024"
license = "MIT"
repository = "https://github.com/folo-rs/folo"
rust-version = "1.86"

[profile.release]
# This ensures we have high quality data with proper stack traces when profiling.
debug = "line-tables-only"

[profile.mutants]
inherits = "dev"
# Speed up the build.
debug = "none"

[workspace.dependencies]
# The packages we publish.
cpulist = { version = "0.2.0", path = "crates/cpulist" }
folo_ffi = { version = "0.1.2", path = "crates/folo_ffi" }
folo_utils = { version = "0.1.0", path = "crates/folo_utils" }
linked = { version = "0.2.1", path = "crates/linked" }
linked_macros = { version = "0.2.1", path = "crates/linked_macros" }
linked_macros_impl = { version = "0.2.1", path = "crates/linked_macros_impl" }
many_cpus = { version = "0.3.2", path = "crates/many_cpus" }
many_cpus_benchmarking = { version = "0.1.11", path = "crates/many_cpus_benchmarking" }

# Internal packages we do not publish.
benchmarks = { path = "crates/benchmarks" }
benchmark_utils = { path = "crates/benchmark_utils" }
testing = { path = "crates/testing" }

# The packages we consume. We only enable "std" features here, the rest in individual crates.
arc-swap = { version = "1.7", default-features = false }
axum = { version = "0.8", default-features = false }
criterion = { version = "0.6", default-features = false }
darling = { version = "0.20", default-features = false }
deranged = { version = "0.4", default-features = false }
derive_more = { version = "2.0", default-features = false }
fake_headers = { version = "0.0", default-features = false }
foldhash = { version = "0.1", default-features = false, features = ["std"] }
frozen-collections = { version = "0.5", default-features = false }
hash_hasher = { version = "2.0", default-features = false }
heapless = { version = "0.8", default-features = false }
http = { version = "1.2", default-features = false, features = ["std"] }
include-doc = { version = "0.2", default-features = false }
itertools = { version = "0.14", default-features = false, features = [
    "use_std",
] }
libc = { version = "0.2", default-features = false }
mockall = { version = "0.13", default-features = false }
mutants = { version = "0.0.3", default-features = false }
negative-impl = { version = "0.1", default-features = false }
nonempty = { version = "0.11", default-features = false }
oneshot = { version = "0.1", default-features = false, features = ["std"] }
paste = { version = "1.0", default-features = false }
proc-macro2 = { version = "1.0", default-features = false }
quote = { version = "1.0", default-features = false }
rand = { version = "0.9", default-features = false, features = ["std"] }
rsevents = { version = "0.3.1", default-features = false }
scc = { version = "2.3", default-features = false }
scopeguard = { version = "1.2", default-features = false }
seq-macro = { version = "0.3", default-features = false }
simple-mermaid = { version = "0.2", default-features = false }
smallvec = { version = "1.15.0", default-features = false }
static_assertions = { version = "1", default-features = false }
syn = { version = "2.0", default-features = false }
thiserror = { version = "2.0", default-features = false }
tokio = { version = "1.43", default-features = false }
windows = { version = "0.61", default-features = false, features = ["std"] }

[workspace.lints.rust]
# https://doc.rust-lang.org/rustc/lints/listing/allowed-by-default.html
closure_returning_async_block = "warn"
elided_lifetimes_in_paths = "warn"
# Unstable: fuzzy_provenance_casts = "warn"
let_underscore_drop = "warn"
# Unstable: lossy_provenance_casts = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
# Unstable: must_not_suspend = "warn"
trivial_casts = "warn"
unit_bindings = "warn"
unnameable_types = "warn"
# Unstable: unqualified_local_imports = "warn"
unreachable_pub = "warn"
unsafe_attr_outside_unsafe = "warn"
unused_import_braces = "warn"
unused_lifetimes = "warn"
unused_macro_rules = "warn"
unused_macros = "warn"
unused_qualifications = "warn"
variant_size_differences = "warn"

[workspace.lints.rustdoc]
private_doc_tests = "warn"
unescaped_backticks = "warn"

[workspace.lints.clippy]
absolute_paths = "warn"
allow_attributes_without_reason = "warn"
arithmetic_side_effects = "warn"
as_ptr_cast_mut = "warn"
assertions_on_result_states = "warn"
assigning_clones = "warn"
borrow_as_ptr = "warn"
cast_lossless = "warn"
cast_possible_truncation = "warn"
cast_possible_wrap = "warn"
cast_precision_loss = "warn"
cast_ptr_alignment = "warn"
cast_sign_loss = "warn"
clone_on_ref_ptr = "warn"
cloned_instead_of_copied = "warn"
cognitive_complexity = "warn"
collection_is_never_read = "warn"
copy_iterator = "warn"
create_dir = "warn"
dbg_macro = "warn"
debug_assert_with_mut_call = "warn"
default_trait_access = "warn"
default_union_representation = "warn"
derive_partial_eq_without_eq = "warn"
doc_link_with_quotes = "warn"
doc_markdown = "warn"
empty_drop = "warn"
enum_glob_use = "warn"
equatable_if_let = "warn"
exhaustive_enums = "warn"
exhaustive_structs = "warn"
exit = "warn"
explicit_deref_methods = "warn"
explicit_into_iter_loop = "warn"
explicit_iter_loop = "warn"
filter_map_next = "warn"
flat_map_option = "warn"
float_cmp = "warn"
float_cmp_const = "warn"
fn_params_excessive_bools = "warn"
fn_to_numeric_cast_any = "warn"
format_collect = "warn"
format_push_string = "warn"
ignored_unit_patterns = "warn"
implicit_clone = "warn"
implicit_hasher = "warn"
inconsistent_struct_constructor = "warn"
indexing_slicing = "warn"
integer_division = "warn"
into_iter_without_iter = "warn"
invalid_upcast_comparisons = "warn"
items_after_statements = "warn"
iter_filter_is_ok = "warn"
iter_filter_is_some = "warn"
iter_not_returning_iterator = "warn"
iter_on_empty_collections = "warn"
iter_on_single_items = "warn"
iter_with_drain = "warn"
iter_without_into_iter = "warn"
large_futures = "warn"
large_stack_arrays = "warn"
large_stack_frames = "warn"
large_types_passed_by_value = "warn"
let_underscore_must_use = "warn"
literal_string_with_formatting_args = "warn"
lossy_float_literal = "warn"
manual_assert = "warn"
manual_instant_elapsed = "warn"
manual_is_power_of_two = "warn"
manual_is_variant_and = "warn"
manual_let_else = "warn"
manual_midpoint = "warn"
manual_ok_or = "warn"
manual_string_new = "warn"
map_err_ignore = "warn"
map_unwrap_or = "warn"
map_with_unused_argument_over_ranges = "warn"
match_bool = "warn"
match_same_arms = "warn"
mismatching_type_param_order = "warn"
missing_fields_in_debug = "warn"
mixed_read_write_in_expression = "warn"
mod_module_files = "warn"
module_name_repetitions = "warn"
modulo_arithmetic = "warn"
multiple_unsafe_ops_per_block = "warn"
must_use_candidate = "warn"
mut_mut = "warn"
mutex_atomic = "warn"
mutex_integer = "warn"
naive_bytecount = "warn"
needless_bitwise_bool = "warn"
needless_collect = "warn"
needless_for_each = "warn"
needless_pass_by_ref_mut = "warn"
needless_pass_by_value = "warn"
needless_raw_string_hashes = "warn"
needless_raw_strings = "warn"
no_effect_underscore_binding = "warn"
non_std_lazy_statics = "warn"
non_zero_suggestions = "warn"
nonstandard_macro_braces = "warn"
option_as_ref_cloned = "warn"
option_if_let_else = "warn"
option_option = "warn"
or_fun_call = "warn"
partial_pub_fields = "warn"
path_buf_push_overwrite = "warn"
pathbuf_init_then_push = "warn"
precedence_bits = "warn"
ptr_cast_constness = "warn"
pub_underscore_fields = "warn"
range_minus_one = "warn"
range_plus_one = "warn"
rc_buffer = "warn"
rc_mutex = "warn"
redundant_clone = "warn"
redundant_closure_for_method_calls = "warn"
redundant_else = "warn"
ref_as_ptr = "warn"
ref_binding_to_reference = "warn"
ref_option = "warn"
ref_option_ref = "warn"
renamed_function_params = "warn"
rest_pat_in_fully_bound_structs = "warn"
return_and_then = "warn"
return_self_not_must_use = "warn"
same_functions_in_if_condition = "warn"
semicolon_if_nothing_returned = "warn"
semicolon_inside_block = "warn"
set_contains_or_insert = "warn"
single_char_pattern = "warn"
single_option_map = "warn"
str_split_at_newline = "warn"
string_lit_chars_any = "warn"
string_slice = "warn"
string_to_string = "warn"
struct_field_names = "warn"
suspicious_operation_groupings = "warn"
too_long_first_doc_paragraph = "warn"
trailing_empty_array = "warn"
trait_duplication_in_bounds = "warn"
trivially_copy_pass_by_ref = "warn"
try_err = "warn"
tuple_array_conversions = "warn"
type_repetition_in_bounds = "warn"
unchecked_duration_subtraction = "warn"
undocumented_unsafe_blocks = "warn"
uninhabited_references = "warn"
uninlined_format_args = "warn"
unnecessary_box_returns = "warn"
unnecessary_join = "warn"
unnecessary_safety_comment = "warn"
unnecessary_safety_doc = "warn"
unnecessary_self_imports = "warn"
unnecessary_semicolon = "warn"
unnecessary_struct_initialization = "warn"
unnecessary_wraps = "warn"
unneeded_field_pattern = "warn"
unnested_or_patterns = "warn"
unseparated_literal_suffix = "warn"
unused_async = "warn"
unused_peekable = "warn"
unused_result_ok = "warn"
unused_self = "warn"
use_self = "warn"
useless_let_if_seq = "warn"
verbose_bit_mask = "warn"
while_float = "warn"
